from flask_jwt_extended.utils import get_jwt_identity
from flask_restful import Resource
from http import HTTPStatus
from flask import request
from flask_jwt_extended.view_decorators import jwt_required

from mysql.connector.errors import Error
from email_validator import validate_email, EmailNotValidError
from flask_jwt_extended import create_access_token
from utils_MySQL_connection import get_cnx
from utils_p2h import check_password

class UserInformationResource(Resource):
    @jwt_required() # 헤더를 통해 토큰을 받음
    def get (self):
        user_id = get_jwt_identity()
        try:
            cnx = get_cnx()
            # 유저의 정보 가져오기
            query = '''select * from user
                    where id = %s;'''

            param = (user_id,)
            cursor = cnx.cursor(dictionary = True)
            cursor.execute(query, param)
            record_list = cursor.fetchall()

            i = 0
            for record in record_list:
                record_list[i]['created_at'] = record['created_at'].isoformat()
                i=i+1

        except Error as e:
            print('Error while connecting to MySQL\n',e) #DB 통신 에러/터미널
            return {'error':str(e)}, HTTPStatus.BAD_REQUEST #DB 통신 에러/응답

        finally :
            cursor.close()
            if cnx.is_connected():
                cnx.close()
                print('MySQL connection is closed')
            else:
                print('connection does not exist')

        # 반환받은 정보를 클라이언트에 응답.
        return {'data':record_list}, HTTPStatus.OK



# 그리고 유저id가 일치하는 작성된 리뷰도 모두 가져온다.
# class UserReviewsResource(Resource):
#     @jwt_required() # 헤더를 통해 토큰을 받음
#     def get (self):
#         user_id = get_jwt_identity()
